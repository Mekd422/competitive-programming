class Solution:
    def search(self, nums: List[int], target: int) -> int:
        left=0
        right=len(nums)-1

        while left<=right:
            mid=(left+right)//2  #calculate the mid value
            if nums[mid]==target:
                return mid
            elif nums[mid]>=nums[left]: #search for the ascending order part --> left half
                if nums[left]<=target<=nums[mid]:
                    right=mid-1
                else:
                    left=mid+1
            else:   #search for the right half of the  ascending ordered values
                if nums[mid]<=target<=nums[right]: 
                    left=mid+1
                else:
                    right=mid-1
        return -1
        
